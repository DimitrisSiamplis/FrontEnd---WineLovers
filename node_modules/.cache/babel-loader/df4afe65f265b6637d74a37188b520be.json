{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimitris.siamplis\\\\Desktop\\\\React-Node\\\\Front-End\\\\src\\\\pages\\\\HelpUsPages\\\\BigCategories.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./BigCategories.css\";\nimport { Col, Row, Form, Button, Alert } from \"react-bootstrap\";\nimport { FaFish, FaPizzaSlice } from \"react-icons/fa\";\nimport { GiChickenOven } from \"react-icons/gi\";\nimport { TbMeat } from \"react-icons/tb\";\nimport { GiRopeCoil } from \"react-icons/gi\";\nimport { TbCheese } from \"react-icons/tb\";\nimport { useState, useEffect } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BigCategories = _ref => {\n  _s();\n\n  let {\n    colorWines,\n    typeWines,\n    grapeWines\n  } = _ref;\n  const [deviceSize, changeDeviceSize] = useState(window.innerWidth);\n  useEffect(() => {\n    const resizeW = () => changeDeviceSize(window.innerWidth);\n\n    window.addEventListener(\"resize\", resizeW); // Update the width on resize\n\n    return () => window.removeEventListener(\"resize\", resizeW);\n  });\n  const wineYears = [\"1950 or oldest\", \"1950-1980\", \"1980-2000\", \"2000-2010\", \"2010-2020\", \"2020-present\"];\n  console.log(wineYears);\n  const [redMeat, setReadMeat] = useState({\n    Type: \"\",\n    Color: \"\",\n    Grape: \"\",\n    Year: \"\"\n  });\n  const [whiteMeat, setWhiteMeat] = useState({\n    Type: \"\",\n    Color: \"\",\n    Grape: \"\",\n    Year: \"\"\n  });\n  const [fish, setFish] = useState({\n    Type: \"\",\n    Color: \"\",\n    Grape: \"\",\n    Year: \"\"\n  });\n  const [cheece, setCheece] = useState({\n    Type: \"\",\n    Color: \"\",\n    Grape: \"\",\n    Year: \"\"\n  });\n  const [pasta, setPasta] = useState({\n    Type: \"\",\n    Color: \"\",\n    Grape: \"\",\n    Year: \"\"\n  });\n  const [pizza, setPizza] = useState({\n    Type: \"\",\n    Color: \"\",\n    Grape: \"\",\n    Year: \"\"\n  });\n  const cookies = new Cookies();\n  var userEmail = cookies.get(\"email\");\n\n  const bigCategories = () => {\n    let bigCategoriesDetails = {\n      Types: [redMeat.Type, whiteMeat.Type, fish.Type, cheece.Type, pasta.Type, pizza.Type],\n      Colors: [redMeat.Color, whiteMeat.Color, fish.Color, cheece.Color, pasta.Color, pizza.Color],\n      Grapes: [redMeat.Grape, whiteMeat.Grape, fish.Grape, cheece.Grape, pasta.Grape, pizza.Grape],\n      Years: [redMeat.Year, whiteMeat.Year, fish.Year, cheece.Year, pasta.Year, pizza.Year],\n      Email: userEmail\n    };\n    fetch(\"http://localhost:4000/opinionBigCategories\", {\n      method: \"POST\",\n      body: JSON.stringify(bigCategoriesDetails),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(json => {\n      console.log(json);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"\\u2022 Big Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"helpUsTitleContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"- Wine would you pair with : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helpUsTitleContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"1.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), \" Red Meat \", /*#__PURE__*/_jsxDEV(TbMeat, {\n              className: \"reactIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setReadMeat({\n                    Type: e.target.value,\n                    Color: redMeat.Color,\n                    Grape: redMeat.Grape,\n                    Year: redMeat.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: redMeat.Type === \"\" ? true : false,\n                  children: \"Select Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), typeWines.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: redMeat.Type === type ? true : false,\n                  children: type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setReadMeat({\n                    Type: redMeat.Type,\n                    Color: e.target.value,\n                    Grape: redMeat.Grape,\n                    Year: redMeat.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: redMeat.Color === \"\" ? true : false,\n                  children: \"Select color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this), colorWines.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: redMeat.Color === color ? true : false,\n                  children: color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setReadMeat({\n                    Type: redMeat.Type,\n                    Color: redMeat.Color,\n                    Grape: e.target.value,\n                    Year: redMeat.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: redMeat.Grape === \"\" ? true : false,\n                  children: \"Select grape\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this), grapeWines.map(grape => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: redMeat.Grape === grape ? true : false,\n                  children: grape\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setReadMeat({\n                    Type: redMeat.Type,\n                    Color: redMeat.Color,\n                    Grape: redMeat.Grape,\n                    Year: e.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: redMeat.Year === \"\" ? true : false,\n                  children: \"Select year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this), wineYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: redMeat.Year === year ? true : false,\n                  children: year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helpUsTitleContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"2.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), \" White Meat \\xA0\", \" \", /*#__PURE__*/_jsxDEV(GiChickenOven, {\n              className: \"reactIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setWhiteMeat({\n                    Type: e.target.value,\n                    Color: whiteMeat.Color,\n                    Grape: whiteMeat.Grape,\n                    Year: whiteMeat.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: whiteMeat.Type === \"\" ? true : false,\n                  children: \"Select Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this), typeWines.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: whiteMeat.Type === type ? true : false,\n                  children: type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setWhiteMeat({\n                    Type: whiteMeat.Type,\n                    Color: e.target.value,\n                    Grape: whiteMeat.Grape,\n                    Year: whiteMeat.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: whiteMeat.Color === \"\" ? true : false,\n                  children: \"Select color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this), colorWines.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: whiteMeat.Color === color ? true : false,\n                  children: color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setWhiteMeat({\n                    Type: whiteMeat.Type,\n                    Color: whiteMeat.Color,\n                    Grape: e.target.value,\n                    Year: whiteMeat.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: whiteMeat.Grape === \"\" ? true : false,\n                  children: \"Select grape\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this), grapeWines.map(grape => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: whiteMeat.Grape === grape ? true : false,\n                  children: grape\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setWhiteMeat({\n                    Type: whiteMeat.Type,\n                    Color: whiteMeat.Color,\n                    Grape: whiteMeat.Grape,\n                    Year: e.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: whiteMeat.Year === \"\" ? true : false,\n                  children: \"Select year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 19\n                }, this), wineYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: whiteMeat.Year === year ? true : false,\n                  children: year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helpUsTitleContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"3.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), \" Fish \\xA0 \", /*#__PURE__*/_jsxDEV(FaFish, {\n              className: \"reactIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 47\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setFish({\n                    Type: e.target.value,\n                    Color: fish.Color,\n                    Grape: fish.Grape,\n                    Year: fish.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: fish.Type === \"\" ? true : false,\n                  children: \"Select Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 19\n                }, this), typeWines.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: fish.Type === type ? true : false,\n                  children: type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setFish({\n                    Type: fish.Type,\n                    Color: e.target.value,\n                    Grape: fish.Grape,\n                    Year: fish.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: fish.Color === \"\" ? true : false,\n                  children: \"Select color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 19\n                }, this), colorWines.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: fish.Color === color ? true : false,\n                  children: color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setFish({\n                    Type: fish.Type,\n                    Color: fish.Color,\n                    Grape: e.target.value,\n                    Year: fish.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: fish.Grape === \"\" ? true : false,\n                  children: \"Select grape\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 19\n                }, this), grapeWines.map(grape => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: fish.Grape === grape ? true : false,\n                  children: grape\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setFish({\n                    Type: fish.Type,\n                    Color: fish.Color,\n                    Grape: fish.Grape,\n                    Year: e.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: fish.Year === \"\" ? true : false,\n                  children: \"Select year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 19\n                }, this), wineYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: fish.Year === year ? true : false,\n                  children: year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helpUsTitleContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), \" Cheece \\xA0\", \" \", /*#__PURE__*/_jsxDEV(TbCheese, {\n              className: \"reactIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setCheece({\n                    Type: e.target.value,\n                    Color: cheece.Color,\n                    Grape: cheece.Grape,\n                    Year: cheece.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: cheece.Type === \"\" ? true : false,\n                  children: \"Select Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 19\n                }, this), typeWines.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: cheece.Type === type ? true : false,\n                  children: type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setCheece({\n                    Type: cheece.Type,\n                    Color: e.target.value,\n                    Grape: cheece.Grape,\n                    Year: cheece.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: cheece.Color === \"\" ? true : false,\n                  children: \"Select color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 19\n                }, this), colorWines.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: cheece.Color === color ? true : false,\n                  children: color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setCheece({\n                    Type: cheece.Type,\n                    Color: cheece.Color,\n                    Grape: e.target.value,\n                    Year: cheece.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: cheece.Grape === \"\" ? true : false,\n                  children: \"Select grape\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 19\n                }, this), grapeWines.map(grape => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: cheece.Grape === grape ? true : false,\n                  children: grape\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setCheece({\n                    Type: cheece.Type,\n                    Color: cheece.Color,\n                    Grape: cheece.Grape,\n                    Year: e.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: cheece.Year === \"\" ? true : false,\n                  children: \"Select year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 19\n                }, this), wineYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: cheece.Year === year ? true : false,\n                  children: year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helpUsTitleContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"5.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this), \" Pasta \", /*#__PURE__*/_jsxDEV(GiRopeCoil, {\n              className: \"reactIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setPasta({\n                    Type: e.target.value,\n                    Color: pasta.Color,\n                    Grape: pasta.Grape,\n                    Year: pasta.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: pasta.Type === \"\" ? true : false,\n                  children: \"Select Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 19\n                }, this), typeWines.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: pasta.Type === type ? true : false,\n                  children: type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setPasta({\n                    Type: pasta.Type,\n                    Color: e.target.value,\n                    Grape: pasta.Grape,\n                    Year: pasta.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: pasta.Color === \"\" ? true : false,\n                  children: \"Select color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 19\n                }, this), colorWines.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: pasta.Color === color ? true : false,\n                  children: color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setPasta({\n                    Type: pasta.Type,\n                    Color: pasta.Color,\n                    Grape: e.target.value,\n                    Year: pasta.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: pasta.Grape === \"\" ? true : false,\n                  children: \"Select grape\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 19\n                }, this), grapeWines.map(grape => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: pasta.Grape === grape ? true : false,\n                  children: grape\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setPasta({\n                    Type: pasta.Type,\n                    Color: pasta.Color,\n                    Grape: pasta.Grape,\n                    Year: e.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: pasta.Year === \"\" ? true : false,\n                  children: \"Select year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 19\n                }, this), wineYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: pasta.Year === year ? true : false,\n                  children: year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helpUsTitleContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"6.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 15\n            }, this), \" Pizza \\xA0\", \" \", /*#__PURE__*/_jsxDEV(FaPizzaSlice, {\n              className: \"reactIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setPizza({\n                    Type: e.target.value,\n                    Color: pizza.Color,\n                    Grape: pizza.Grape,\n                    Year: pizza.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: pizza.Type === \"\" ? true : false,\n                  children: \"Select Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 19\n                }, this), typeWines.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: pizza.Type === type ? true : false,\n                  children: type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setPizza({\n                    Type: pizza.Type,\n                    Color: e.target.value,\n                    Grape: pizza.Grape,\n                    Year: pizza.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: pizza.Color === \"\" ? true : false,\n                  children: \"Select color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 19\n                }, this), colorWines.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: pizza.Color === color ? true : false,\n                  children: color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setPizza({\n                    Type: pizza.Type,\n                    Color: pizza.Color,\n                    Grape: e.target.value,\n                    Year: pizza.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: pizza.Grape === \"\" ? true : false,\n                  children: \"Select grape\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 19\n                }, this), grapeWines.map(grape => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: pizza.Grape === grape ? true : false,\n                  children: grape\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 600 ? 6 : 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setPizza({\n                    Type: pizza.Type,\n                    Color: pizza.Color,\n                    Grape: pizza.Grape,\n                    Year: e.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: pizza.Year === \"\" ? true : false,\n                  children: \"Select year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 19\n                }, this), wineYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: pizza.Year === year ? true : false,\n                  children: year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => {\n              setReadMeat({\n                Type: \"\",\n                Color: \"\",\n                Grape: \"\",\n                Year: \"\"\n              });\n              setWhiteMeat({\n                Type: \"\",\n                Color: \"\",\n                Grape: \"\",\n                Year: \"\"\n              });\n              setFish({\n                Type: \"\",\n                Color: \"\",\n                Grape: \"\",\n                Year: \"\"\n              });\n              setCheece({\n                Type: \"\",\n                Color: \"\",\n                Grape: \"\",\n                Year: \"\"\n              });\n              setPasta({\n                Type: \"\",\n                Color: \"\",\n                Grape: \"\",\n                Year: \"\"\n              });\n              setPizza({\n                Type: \"\",\n                Color: \"\",\n                Grape: \"\",\n                Year: \"\"\n              });\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: () => {\n              // console.log(redMeat);\n              // console.log(whiteMeat);\n              // console.log(fish);\n              // console.log(cheece);\n              // console.log(pasta);\n              // console.log(pizza);\n              bigCategories();\n            },\n            children: \"Aply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: \"This is a alert\\u2014check it out!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BigCategories, \"gO9vZMHlukm6F5ob+s7VAzozYhA=\");\n\n_c = BigCategories;\nexport default BigCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"BigCategories\");","map":{"version":3,"sources":["C:/Users/dimitris.siamplis/Desktop/React-Node/Front-End/src/pages/HelpUsPages/BigCategories.js"],"names":["React","Col","Row","Form","Button","Alert","FaFish","FaPizzaSlice","GiChickenOven","TbMeat","GiRopeCoil","TbCheese","useState","useEffect","Cookies","BigCategories","colorWines","typeWines","grapeWines","deviceSize","changeDeviceSize","window","innerWidth","resizeW","addEventListener","removeEventListener","wineYears","console","log","redMeat","setReadMeat","Type","Color","Grape","Year","whiteMeat","setWhiteMeat","fish","setFish","cheece","setCheece","pasta","setPasta","pizza","setPizza","cookies","userEmail","get","bigCategories","bigCategoriesDetails","Types","Colors","Grapes","Years","Email","fetch","method","body","JSON","stringify","headers","then","res","json","e","target","value","map","type","color","grape","year"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./BigCategories.css\";\r\nimport { Col, Row, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { FaFish, FaPizzaSlice } from \"react-icons/fa\";\r\nimport { GiChickenOven } from \"react-icons/gi\";\r\nimport { TbMeat } from \"react-icons/tb\";\r\nimport { GiRopeCoil } from \"react-icons/gi\";\r\nimport { TbCheese } from \"react-icons/tb\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst BigCategories = ({ colorWines, typeWines, grapeWines }) => {\r\n  const [deviceSize, changeDeviceSize] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    const resizeW = () => changeDeviceSize(window.innerWidth);\r\n\r\n    window.addEventListener(\"resize\", resizeW); // Update the width on resize\r\n    return () => window.removeEventListener(\"resize\", resizeW);\r\n  });\r\n  const wineYears = [\r\n    \"1950 or oldest\",\r\n    \"1950-1980\",\r\n    \"1980-2000\",\r\n    \"2000-2010\",\r\n    \"2010-2020\",\r\n    \"2020-present\",\r\n  ];\r\n\r\n  console.log(wineYears);\r\n  const [redMeat, setReadMeat] = useState({\r\n    Type: \"\",\r\n    Color: \"\",\r\n    Grape: \"\",\r\n    Year: \"\",\r\n  });\r\n  const [whiteMeat, setWhiteMeat] = useState({\r\n    Type: \"\",\r\n    Color: \"\",\r\n    Grape: \"\",\r\n    Year: \"\",\r\n  });\r\n  const [fish, setFish] = useState({\r\n    Type: \"\",\r\n    Color: \"\",\r\n    Grape: \"\",\r\n    Year: \"\",\r\n  });\r\n  const [cheece, setCheece] = useState({\r\n    Type: \"\",\r\n    Color: \"\",\r\n    Grape: \"\",\r\n    Year: \"\",\r\n  });\r\n  const [pasta, setPasta] = useState({\r\n    Type: \"\",\r\n    Color: \"\",\r\n    Grape: \"\",\r\n    Year: \"\",\r\n  });\r\n  const [pizza, setPizza] = useState({\r\n    Type: \"\",\r\n    Color: \"\",\r\n    Grape: \"\",\r\n    Year: \"\",\r\n  });\r\n  const cookies = new Cookies();\r\n  var userEmail = cookies.get(\"email\");\r\n\r\n  const bigCategories = () => {\r\n    let bigCategoriesDetails = {\r\n      Types: [\r\n        redMeat.Type,\r\n        whiteMeat.Type,\r\n        fish.Type,\r\n        cheece.Type,\r\n        pasta.Type,\r\n        pizza.Type,\r\n      ],\r\n      Colors: [\r\n        redMeat.Color,\r\n        whiteMeat.Color,\r\n        fish.Color,\r\n        cheece.Color,\r\n        pasta.Color,\r\n        pizza.Color,\r\n      ],\r\n      Grapes: [\r\n        redMeat.Grape,\r\n        whiteMeat.Grape,\r\n        fish.Grape,\r\n        cheece.Grape,\r\n        pasta.Grape,\r\n        pizza.Grape,\r\n      ],\r\n      Years: [\r\n        redMeat.Year,\r\n        whiteMeat.Year,\r\n        fish.Year,\r\n        cheece.Year,\r\n        pasta.Year,\r\n        pizza.Year,\r\n      ],\r\n      Email: userEmail,\r\n    };\r\n    fetch(\"http://localhost:4000/opinionBigCategories\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(bigCategoriesDetails),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h5>&#8226; Big Categories</h5>\r\n        <div className=\"helpUsTitleContent\">\r\n          <p>- Wine would you pair with : </p>\r\n\r\n          <div className=\"helpUsTitleContent\">\r\n            <p>\r\n              <strong>1.</strong> Red Meat <TbMeat className=\"reactIcon\" />\r\n            </p>\r\n\r\n            <Row>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setReadMeat({\r\n                      Type: e.target.value,\r\n                      Color: redMeat.Color,\r\n                      Grape: redMeat.Grape,\r\n                      Year: redMeat.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option\r\n                    value=\"\"\r\n                    selected={redMeat.Type === \"\" ? true : false}\r\n                  >\r\n                    Select Type\r\n                  </option>\r\n                  {typeWines.map((type) => (\r\n                    <option selected={redMeat.Type === type ? true : false}>\r\n                      {type}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setReadMeat({\r\n                      Type: redMeat.Type,\r\n                      Color: e.target.value,\r\n                      Grape: redMeat.Grape,\r\n                      Year: redMeat.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option\r\n                    value=\"\"\r\n                    selected={redMeat.Color === \"\" ? true : false}\r\n                  >\r\n                    Select color\r\n                  </option>\r\n                  {colorWines.map((color) => (\r\n                    <option selected={redMeat.Color === color ? true : false}>\r\n                      {color}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setReadMeat({\r\n                      Type: redMeat.Type,\r\n                      Color: redMeat.Color,\r\n                      Grape: e.target.value,\r\n                      Year: redMeat.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option\r\n                    value=\"\"\r\n                    selected={redMeat.Grape === \"\" ? true : false}\r\n                  >\r\n                    Select grape\r\n                  </option>\r\n                  {grapeWines.map((grape) => (\r\n                    <option selected={redMeat.Grape === grape ? true : false}>\r\n                      {grape}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setReadMeat({\r\n                      Type: redMeat.Type,\r\n                      Color: redMeat.Color,\r\n                      Grape: redMeat.Grape,\r\n                      Year: e.target.value,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option\r\n                    value=\"\"\r\n                    selected={redMeat.Year === \"\" ? true : false}\r\n                  >\r\n                    Select year\r\n                  </option>\r\n                  {wineYears.map((year) => (\r\n                    <option selected={redMeat.Year === year ? true : false}>\r\n                      {year}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <div className=\"helpUsTitleContent\">\r\n            <p>\r\n              <strong>2.</strong> White Meat &nbsp;{\" \"}\r\n              <GiChickenOven className=\"reactIcon\" />{\" \"}\r\n            </p>\r\n\r\n            <Row>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setWhiteMeat({\r\n                      Type: e.target.value,\r\n                      Color: whiteMeat.Color,\r\n                      Grape: whiteMeat.Grape,\r\n                      Year: whiteMeat.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option\r\n                    value=\"\"\r\n                    selected={whiteMeat.Type === \"\" ? true : false}\r\n                  >\r\n                    Select Type\r\n                  </option>\r\n                  {typeWines.map((type) => (\r\n                    <option selected={whiteMeat.Type === type ? true : false}>\r\n                      {type}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setWhiteMeat({\r\n                      Type: whiteMeat.Type,\r\n                      Color: e.target.value,\r\n                      Grape: whiteMeat.Grape,\r\n                      Year: whiteMeat.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option\r\n                    value=\"\"\r\n                    selected={whiteMeat.Color === \"\" ? true : false}\r\n                  >\r\n                    Select color\r\n                  </option>\r\n                  {colorWines.map((color) => (\r\n                    <option selected={whiteMeat.Color === color ? true : false}>\r\n                      {color}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setWhiteMeat({\r\n                      Type: whiteMeat.Type,\r\n                      Color: whiteMeat.Color,\r\n                      Grape: e.target.value,\r\n                      Year: whiteMeat.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option\r\n                    value=\"\"\r\n                    selected={whiteMeat.Grape === \"\" ? true : false}\r\n                  >\r\n                    Select grape\r\n                  </option>\r\n                  {grapeWines.map((grape) => (\r\n                    <option selected={whiteMeat.Grape === grape ? true : false}>\r\n                      {grape}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setWhiteMeat({\r\n                      Type: whiteMeat.Type,\r\n                      Color: whiteMeat.Color,\r\n                      Grape: whiteMeat.Grape,\r\n                      Year: e.target.value,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option\r\n                    value=\"\"\r\n                    selected={whiteMeat.Year === \"\" ? true : false}\r\n                  >\r\n                    Select year\r\n                  </option>\r\n                  {wineYears.map((year) => (\r\n                    <option selected={whiteMeat.Year === year ? true : false}>\r\n                      {year}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <div className=\"helpUsTitleContent\">\r\n            <p>\r\n              <strong>3.</strong> Fish &nbsp; <FaFish className=\"reactIcon\" />{\" \"}\r\n            </p>\r\n\r\n            <Row>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setFish({\r\n                      Type: e.target.value,\r\n                      Color: fish.Color,\r\n                      Grape: fish.Grape,\r\n                      Year: fish.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={fish.Type === \"\" ? true : false}>\r\n                    Select Type\r\n                  </option>\r\n                  {typeWines.map((type) => (\r\n                    <option selected={fish.Type === type ? true : false}>\r\n                      {type}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setFish({\r\n                      Type: fish.Type,\r\n                      Color: e.target.value,\r\n                      Grape: fish.Grape,\r\n                      Year: fish.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={fish.Color === \"\" ? true : false}>\r\n                    Select color\r\n                  </option>\r\n                  {colorWines.map((color) => (\r\n                    <option selected={fish.Color === color ? true : false}>\r\n                      {color}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setFish({\r\n                      Type: fish.Type,\r\n                      Color: fish.Color,\r\n                      Grape: e.target.value,\r\n                      Year: fish.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={fish.Grape === \"\" ? true : false}>\r\n                    Select grape\r\n                  </option>\r\n                  {grapeWines.map((grape) => (\r\n                    <option selected={fish.Grape === grape ? true : false}>\r\n                      {grape}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setFish({\r\n                      Type: fish.Type,\r\n                      Color: fish.Color,\r\n                      Grape: fish.Grape,\r\n                      Year: e.target.value,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={fish.Year === \"\" ? true : false}>\r\n                    Select year\r\n                  </option>\r\n                  {wineYears.map((year) => (\r\n                    <option selected={fish.Year === year ? true : false}>\r\n                      {year}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <div className=\"helpUsTitleContent\">\r\n            <p>\r\n              <strong>4.</strong> Cheece &nbsp;{\" \"}\r\n              <TbCheese className=\"reactIcon\" />{\" \"}\r\n            </p>\r\n\r\n            <Row>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setCheece({\r\n                      Type: e.target.value,\r\n                      Color: cheece.Color,\r\n                      Grape: cheece.Grape,\r\n                      Year: cheece.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={cheece.Type === \"\" ? true : false}>\r\n                    Select Type\r\n                  </option>\r\n                  {typeWines.map((type) => (\r\n                    <option selected={cheece.Type === type ? true : false}>\r\n                      {type}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setCheece({\r\n                      Type: cheece.Type,\r\n                      Color: e.target.value,\r\n                      Grape: cheece.Grape,\r\n                      Year: cheece.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option\r\n                    value=\"\"\r\n                    selected={cheece.Color === \"\" ? true : false}\r\n                  >\r\n                    Select color\r\n                  </option>\r\n                  {colorWines.map((color) => (\r\n                    <option selected={cheece.Color === color ? true : false}>\r\n                      {color}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setCheece({\r\n                      Type: cheece.Type,\r\n                      Color: cheece.Color,\r\n                      Grape: e.target.value,\r\n                      Year: cheece.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option\r\n                    value=\"\"\r\n                    selected={cheece.Grape === \"\" ? true : false}\r\n                  >\r\n                    Select grape\r\n                  </option>\r\n                  {grapeWines.map((grape) => (\r\n                    <option selected={cheece.Grape === grape ? true : false}>\r\n                      {grape}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setCheece({\r\n                      Type: cheece.Type,\r\n                      Color: cheece.Color,\r\n                      Grape: cheece.Grape,\r\n                      Year: e.target.value,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={cheece.Year === \"\" ? true : false}>\r\n                    Select year\r\n                  </option>\r\n                  {wineYears.map((year) => (\r\n                    <option selected={cheece.Year === year ? true : false}>\r\n                      {year}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <div className=\"helpUsTitleContent\">\r\n            <p>\r\n              <strong>5.</strong> Pasta <GiRopeCoil className=\"reactIcon\" />\r\n            </p>\r\n\r\n            <Row>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setPasta({\r\n                      Type: e.target.value,\r\n                      Color: pasta.Color,\r\n                      Grape: pasta.Grape,\r\n                      Year: pasta.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={pasta.Type === \"\" ? true : false}>\r\n                    Select Type\r\n                  </option>\r\n                  {typeWines.map((type) => (\r\n                    <option selected={pasta.Type === type ? true : false}>\r\n                      {type}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setPasta({\r\n                      Type: pasta.Type,\r\n                      Color: e.target.value,\r\n                      Grape: pasta.Grape,\r\n                      Year: pasta.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={pasta.Color === \"\" ? true : false}>\r\n                    Select color\r\n                  </option>\r\n                  {colorWines.map((color) => (\r\n                    <option selected={pasta.Color === color ? true : false}>\r\n                      {color}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setPasta({\r\n                      Type: pasta.Type,\r\n                      Color: pasta.Color,\r\n                      Grape: e.target.value,\r\n                      Year: pasta.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={pasta.Grape === \"\" ? true : false}>\r\n                    Select grape\r\n                  </option>\r\n                  {grapeWines.map((grape) => (\r\n                    <option selected={pasta.Grape === grape ? true : false}>\r\n                      {grape}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setPasta({\r\n                      Type: pasta.Type,\r\n                      Color: pasta.Color,\r\n                      Grape: pasta.Grape,\r\n                      Year: e.target.value,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={pasta.Year === \"\" ? true : false}>\r\n                    Select year\r\n                  </option>\r\n                  {wineYears.map((year) => (\r\n                    <option selected={pasta.Year === year ? true : false}>\r\n                      {year}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <div className=\"helpUsTitleContent\">\r\n            <p>\r\n              <strong>6.</strong> Pizza &nbsp;{\" \"}\r\n              <FaPizzaSlice className=\"reactIcon\" />{\" \"}\r\n            </p>\r\n\r\n            <Row>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setPizza({\r\n                      Type: e.target.value,\r\n                      Color: pizza.Color,\r\n                      Grape: pizza.Grape,\r\n                      Year: pizza.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={pizza.Type === \"\" ? true : false}>\r\n                    Select Type\r\n                  </option>\r\n                  {typeWines.map((type) => (\r\n                    <option selected={pizza.Type === type ? true : false}>\r\n                      {type}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setPizza({\r\n                      Type: pizza.Type,\r\n                      Color: e.target.value,\r\n                      Grape: pizza.Grape,\r\n                      Year: pizza.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={pizza.Color === \"\" ? true : false}>\r\n                    Select color\r\n                  </option>\r\n                  {colorWines.map((color) => (\r\n                    <option selected={pizza.Color === color ? true : false}>\r\n                      {color}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setPizza({\r\n                      Type: pizza.Type,\r\n                      Color: pizza.Color,\r\n                      Grape: e.target.value,\r\n                      Year: pizza.Year,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={pizza.Grape === \"\" ? true : false}>\r\n                    Select grape\r\n                  </option>\r\n                  {grapeWines.map((grape) => (\r\n                    <option selected={pizza.Grape === grape ? true : false}>\r\n                      {grape}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n              <Col xs={deviceSize < 600 ? 6 : 3}>\r\n                <Form.Select\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setPizza({\r\n                      Type: pizza.Type,\r\n                      Color: pizza.Color,\r\n                      Grape: pizza.Grape,\r\n                      Year: e.target.value,\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected={pizza.Year === \"\" ? true : false}>\r\n                    Select year\r\n                  </option>\r\n                  {wineYears.map((year) => (\r\n                    <option selected={pizza.Year === year ? true : false}>\r\n                      {year}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <Row>\r\n          <Col xs={1}>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => {\r\n                setReadMeat({\r\n                  Type: \"\",\r\n                  Color: \"\",\r\n                  Grape: \"\",\r\n                  Year: \"\",\r\n                });\r\n                setWhiteMeat({\r\n                  Type: \"\",\r\n                  Color: \"\",\r\n                  Grape: \"\",\r\n                  Year: \"\",\r\n                });\r\n                setFish({\r\n                  Type: \"\",\r\n                  Color: \"\",\r\n                  Grape: \"\",\r\n                  Year: \"\",\r\n                });\r\n                setCheece({\r\n                  Type: \"\",\r\n                  Color: \"\",\r\n                  Grape: \"\",\r\n                  Year: \"\",\r\n                });\r\n                setPasta({\r\n                  Type: \"\",\r\n                  Color: \"\",\r\n                  Grape: \"\",\r\n                  Year: \"\",\r\n                });\r\n                setPizza({\r\n                  Type: \"\",\r\n                  Color: \"\",\r\n                  Grape: \"\",\r\n                  Year: \"\",\r\n                });\r\n              }}\r\n            >\r\n              Clear\r\n            </Button>\r\n          </Col>\r\n          <Col xs={1}></Col>\r\n          <Col xs={1}>\r\n            <Button\r\n              variant=\"success\"\r\n              onClick={() => {\r\n                // console.log(redMeat);\r\n                // console.log(whiteMeat);\r\n                // console.log(fish);\r\n                // console.log(cheece);\r\n                // console.log(pasta);\r\n                // console.log(pizza);\r\n                bigCategories();\r\n              }}\r\n            >\r\n              Aply\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col xs={4}></Col>\r\n        </Row>\r\n        <Alert variant=\"success\">This is a alert—check it out!</Alert>\r\n        <hr />\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BigCategories;\r\n"]},"metadata":{},"sourceType":"module"}