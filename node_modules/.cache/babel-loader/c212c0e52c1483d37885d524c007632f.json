{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimitris.siamplis\\\\Desktop\\\\React-Node\\\\Front-End\\\\src\\\\pages\\\\FoodAndWine\\\\DayType.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./DayType.css\";\nimport { Chart } from \"react-google-charts\";\nimport { useState, useEffect } from \"react\";\nimport { Col, Row, Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DayType = () => {\n  _s();\n\n  const [results, setResults] = useState([]);\n\n  const getDayTypeResults = _ref => {\n    let {\n      choice\n    } = _ref;\n    let choiceDetails = {\n      choice: choice\n    };\n    fetch(\"http://localhost:3000/bigCaregories\", {\n      method: \"POST\",\n      body: JSON.stringify(choiceDetails),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(json => {\n      console.log(json);\n      console.log(json);\n      setResults(json);\n    });\n  };\n\n  useEffect(() => {//getDayTypeResults();\n  }, []);\n  const dataType = [[\"Type\", \"Type per Wine\"], [\"Dry\", 12], [\"Semi Dry\", 6], [\"Semi Sweet\", 3], [\"Sweet\", 1]];\n  const optionsType = {\n    title: `Wine & Type`,\n    colors: [\"#1f77b4\", \"#ff7f6e\", \"#d62728\", \"#2ca02c\"]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: results.length !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Chart, {\n              chartType: \"PieChart\",\n              data: dataType,\n              options: optionsType,\n              width: \"100%\",\n              height: \"300px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DayType, \"0Oir8sO9qj6087fqVYj2OrfQH1E=\");\n\n_c = DayType;\nexport default DayType;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayType\");","map":{"version":3,"sources":["C:/Users/dimitris.siamplis/Desktop/React-Node/Front-End/src/pages/FoodAndWine/DayType.js"],"names":["React","Chart","useState","useEffect","Col","Row","Spinner","DayType","results","setResults","getDayTypeResults","choice","choiceDetails","fetch","method","body","JSON","stringify","headers","then","res","json","console","log","dataType","optionsType","title","colors","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,OAAnB,QAAkC,iBAAlC;;;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,iBAAiB,GAAG,QAAgB;AAAA,QAAf;AAAEC,MAAAA;AAAF,KAAe;AACxC,QAAIC,aAAa,GAAG;AAClBD,MAAAA,MAAM,EAAEA;AADU,KAApB;AAGAE,IAAAA,KAAK,CAAC,qCAAD,EAAwC;AAC3CC,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,aAAf,CAFqC;AAG3CM,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHkC,KAAxC,CAAL,CAKGC,IALH,CAKSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EALjB,EAMGF,IANH,CAMSE,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAZ,MAAAA,UAAU,CAACY,IAAD,CAAV;AACD,KAVH;AAWD,GAfD;;AAiBAlB,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMqB,QAAQ,GAAG,CACf,CAAC,MAAD,EAAS,eAAT,CADe,EAEf,CAAC,KAAD,EAAQ,EAAR,CAFe,EAGf,CAAC,UAAD,EAAa,CAAb,CAHe,EAIf,CAAC,YAAD,EAAe,CAAf,CAJe,EAKf,CAAC,OAAD,EAAU,CAAV,CALe,CAAjB;AAQA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAG,aADU;AAElBC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC;AAFU,GAApB;AAIA,sBACE;AAAA,2BACE;AAAA,gBACGnB,OAAO,CAACoB,MAAR,KAAmB,CAAnB,iBACC;AAAA,+BACE,QAAC,GAAD;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,SAAS,EAAC,UADZ;AAEE,cAAA,IAAI,EAAEJ,QAFR;AAGE,cAAA,OAAO,EAAEC,WAHX;AAIE,cAAA,KAAK,EAAE,MAJT;AAKE,cAAA,MAAM,EAAE;AALV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,EASS,GATT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAzDD;;GAAMlB,O;;KAAAA,O;AA2DN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport \"./DayType.css\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Col, Row, Spinner } from \"react-bootstrap\";\r\nconst DayType = () => {\r\n  const [results, setResults] = useState([]);\r\n\r\n  const getDayTypeResults = ({ choice }) => {\r\n    let choiceDetails = {\r\n      choice: choice,\r\n    };\r\n    fetch(\"http://localhost:3000/bigCaregories\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(choiceDetails),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        console.log(json);\r\n        setResults(json);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    //getDayTypeResults();\r\n  }, []);\r\n\r\n  const dataType = [\r\n    [\"Type\", \"Type per Wine\"],\r\n    [\"Dry\", 12],\r\n    [\"Semi Dry\", 6],\r\n    [\"Semi Sweet\", 3],\r\n    [\"Sweet\", 1],\r\n  ];\r\n\r\n  const optionsType = {\r\n    title: `Wine & Type`,\r\n    colors: [\"#1f77b4\", \"#ff7f6e\", \"#d62728\", \"#2ca02c\"],\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        {results.length !== 0 && (\r\n          <>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  data={dataType}\r\n                  options={optionsType}\r\n                  width={\"100%\"}\r\n                  height={\"300px\"}\r\n                />\r\n              </Col>{\" \"}\r\n            </Row>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayType;\r\n"]},"metadata":{},"sourceType":"module"}