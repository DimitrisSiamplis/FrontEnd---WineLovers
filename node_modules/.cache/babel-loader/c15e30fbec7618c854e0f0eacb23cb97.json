{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimitris.siamplis\\\\Desktop\\\\React-Node\\\\Front-End\\\\src\\\\pages\\\\HelpUsPages\\\\SpecificFood.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./SpecificFood.css\";\nimport { Col, Row, Form, Button, Alert } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { ImSpoonKnife } from \"react-icons/im\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SpecificFood = _ref => {\n  _s();\n\n  let {\n    colorWines,\n    typeWines,\n    grapeWines\n  } = _ref;\n  const cookies = new Cookies();\n  var userEmail = cookies.get(\"email\"); // ----------- width size -----------------------\n\n  const [deviceSize, changeDeviceSize] = useState(window.innerWidth);\n  useEffect(() => {\n    const resizeW = () => changeDeviceSize(window.innerWidth);\n\n    window.addEventListener(\"resize\", resizeW); // Update the width on resize\n\n    return () => window.removeEventListener(\"resize\", resizeW);\n  });\n  const [writeFood, setWriteFood] = useState(\"\");\n  const [foodResults, setFoodResults] = useState([]);\n  const [selectedFood, setSelectedFood] = useState(\"\");\n  const [specificFood, setSpecificFood] = useState({\n    Type: \"\",\n    Color: \"\",\n    Grape: \"\",\n    Year: \"\"\n  });\n  const [completeAdd, setCompleteAdd] = useState(false);\n  const wineYears = [\"1950 or oldest\", \"1950-1980\", \"1980-2000\", \"2000-2010\", \"2010-2020\", \"2020-present\"]; // ---------------- Food API Call --------------------\n\n  const findAnyFood = food => {\n    fetch(`https://api.spoonacular.com/recipes/complexSearch?apiKey=27e614b6300f46b38613b4bb811633d0&query=${food}`).then(response => response.json()).then(actualData => {\n      console.log(actualData.results);\n      var foods = [];\n      actualData.results.map(food => {\n        foods.push(food.title + \"*\" + food.id + \"*\" + food.image);\n      });\n      setFoodResults(foods);\n    });\n  };\n\n  const addSpecificFood = () => {\n    let newSpecificFood = {\n      Types: specificFood.Type,\n      Colors: specificFood.Color,\n      Grapes: specificFood.Grape,\n      Years: specificFood.Year,\n      Email: userEmail,\n      Name: selectedFood.split(\"*\")[0]\n    };\n    console.log(newSpecificFood);\n    fetch(\"http://localhost:4000/opinionSpecificFood\", {\n      method: \"POST\",\n      body: JSON.stringify(newSpecificFood),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(json => {\n      console.log(json);\n      setCompleteAdd(true);\n    });\n  };\n\n  const clearHandler = () => {\n    setCompleteAdd(false);\n    setSpecificFood({\n      Type: \"\",\n      Color: \"\",\n      Grape: \"\",\n      Year: \"\"\n    });\n  };\n\n  const aplyHandler = () => {\n    addSpecificFood();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"helpUsTitleContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Select the food that you want to pair your wine\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helpUsTitleContent\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 800 ? 7 : 4,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Write\\xA0&\\xA0Find\\xA0your\\xA0Recipe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Find any Food\",\n                value: writeFood,\n                onChange: e => {\n                  setWriteFood(e.target.value);\n\n                  if (e.target.value.length > 2) {\n                    findAnyFood(e.target.value);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 800 ? 7 : 4,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Recipe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                onChange: e => {\n                  setSelectedFood(e.target.value);\n                  window.scrollTo(0, 500);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Food select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), foodResults.map(food => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: food,\n                  children: food.split(\"*\")[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 500 ? 12 : 10,\n              children: selectedFood !== \"\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"imageFood\",\n                  src: selectedFood.split(\"*\")[2]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), selectedFood !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"helpUsTitleContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"- Wine would you pair with\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedFood.split(\"*\")[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), \" :\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helpUsTitleContent\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 800 ? deviceSize < 400 ? 12 : 6 : 2,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setSpecificFood({\n                    Type: e.target.value,\n                    Color: specificFood.Color,\n                    Grape: specificFood.Grape,\n                    Year: specificFood.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: specificFood.Type === \"\" ? true : false,\n                  children: \"Select Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this), typeWines.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: specificFood.Type === type ? true : false,\n                  children: type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 800 ? deviceSize < 400 ? 12 : 6 : 2,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setSpecificFood({\n                    Type: specificFood.Type,\n                    Color: e.target.value,\n                    Grape: specificFood.Grape,\n                    Year: specificFood.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: specificFood.Color === \"\" ? true : false,\n                  children: \"Select color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this), colorWines.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: specificFood.Color === color ? true : false,\n                  children: color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 800 ? deviceSize < 400 ? 12 : 6 : 2,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Grape\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setSpecificFood({\n                    Type: specificFood.Type,\n                    Color: specificFood.Color,\n                    Grape: e.target.value,\n                    Year: specificFood.Year\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: specificFood.Grape === \"\" ? true : false,\n                  children: \"Select grape\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this), grapeWines.map(grape => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: specificFood.Grape === grape ? true : false,\n                  children: grape\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: deviceSize < 800 ? deviceSize < 400 ? 12 : 6 : 2,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Year Range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                size: \"sm\",\n                onChange: e => {\n                  setSpecificFood({\n                    Type: specificFood.Type,\n                    Color: specificFood.Color,\n                    Grape: specificFood.Grape,\n                    Year: e.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: specificFood.Year === \"\" ? true : false,\n                  children: \"Select year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this), wineYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: specificFood.Year === year ? true : false,\n                  children: year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 1,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: clearHandler,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 1,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: aplyHandler,\n          children: \"Aply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), completeAdd && /*#__PURE__*/_jsxDEV(Col, {\n        xs: 8,\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: [\" \", \"Thank you for your help. Your opinion added succesfully.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SpecificFood, \"jrf7rbhVSUwwpHgJ0wC4aF3s/rc=\");\n\n_c = SpecificFood;\nexport default SpecificFood;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpecificFood\");","map":{"version":3,"sources":["C:/Users/dimitris.siamplis/Desktop/React-Node/Front-End/src/pages/HelpUsPages/SpecificFood.js"],"names":["React","Col","Row","Form","Button","Alert","useState","useEffect","ImSpoonKnife","Cookies","SpecificFood","colorWines","typeWines","grapeWines","cookies","userEmail","get","deviceSize","changeDeviceSize","window","innerWidth","resizeW","addEventListener","removeEventListener","writeFood","setWriteFood","foodResults","setFoodResults","selectedFood","setSelectedFood","specificFood","setSpecificFood","Type","Color","Grape","Year","completeAdd","setCompleteAdd","wineYears","findAnyFood","food","fetch","then","response","json","actualData","console","log","results","foods","map","push","title","id","image","addSpecificFood","newSpecificFood","Types","Colors","Grapes","Years","Email","Name","split","method","body","JSON","stringify","headers","res","clearHandler","aplyHandler","e","target","value","length","scrollTo","type","color","grape","year"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./SpecificFood.css\";\r\nimport { Col, Row, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ImSpoonKnife } from \"react-icons/im\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst SpecificFood = ({ colorWines, typeWines, grapeWines }) => {\r\n  const cookies = new Cookies();\r\n  var userEmail = cookies.get(\"email\");\r\n  // ----------- width size -----------------------\r\n  const [deviceSize, changeDeviceSize] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    const resizeW = () => changeDeviceSize(window.innerWidth);\r\n\r\n    window.addEventListener(\"resize\", resizeW); // Update the width on resize\r\n    return () => window.removeEventListener(\"resize\", resizeW);\r\n  });\r\n\r\n  const [writeFood, setWriteFood] = useState(\"\");\r\n  const [foodResults, setFoodResults] = useState([]);\r\n  const [selectedFood, setSelectedFood] = useState(\"\");\r\n  const [specificFood, setSpecificFood] = useState({\r\n    Type: \"\",\r\n    Color: \"\",\r\n    Grape: \"\",\r\n    Year: \"\",\r\n  });\r\n\r\n  const [completeAdd, setCompleteAdd] = useState(false);\r\n\r\n  const wineYears = [\r\n    \"1950 or oldest\",\r\n    \"1950-1980\",\r\n    \"1980-2000\",\r\n    \"2000-2010\",\r\n    \"2010-2020\",\r\n    \"2020-present\",\r\n  ];\r\n\r\n  // ---------------- Food API Call --------------------\r\n  const findAnyFood = (food) => {\r\n    fetch(\r\n      `https://api.spoonacular.com/recipes/complexSearch?apiKey=27e614b6300f46b38613b4bb811633d0&query=${food}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((actualData) => {\r\n        console.log(actualData.results);\r\n        var foods = [];\r\n        actualData.results.map((food) => {\r\n          foods.push(food.title + \"*\" + food.id + \"*\" + food.image);\r\n        });\r\n        setFoodResults(foods);\r\n      });\r\n  };\r\n\r\n  const addSpecificFood = () => {\r\n    let newSpecificFood = {\r\n      Types: specificFood.Type,\r\n      Colors: specificFood.Color,\r\n      Grapes: specificFood.Grape,\r\n      Years: specificFood.Year,\r\n      Email: userEmail,\r\n      Name: selectedFood.split(\"*\")[0],\r\n    };\r\n    console.log(newSpecificFood);\r\n\r\n    fetch(\"http://localhost:4000/opinionSpecificFood\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newSpecificFood),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        setCompleteAdd(true);\r\n      });\r\n  };\r\n\r\n  const clearHandler = () => {\r\n    setCompleteAdd(false);\r\n    setSpecificFood({\r\n      Type: \"\",\r\n      Color: \"\",\r\n      Grape: \"\",\r\n      Year: \"\",\r\n    });\r\n  };\r\n  const aplyHandler = () => {\r\n    addSpecificFood();\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        {/* <h5>&#8226; Select your favourite food</h5> */}\r\n        <div className=\"helpUsTitleContent\">\r\n          <strong>\r\n            Select the food that you want to pair your wine{\" \"}\r\n            {/* <ImSpoonKnife className=\"reactIcon\" /> */}\r\n          </strong>\r\n\r\n          <div className=\"helpUsTitleContent\">\r\n            <Row>\r\n              <Col xs={deviceSize < 800 ? 7 : 4}>\r\n                <Form.Label>\r\n                  Write&nbsp;&&nbsp;Find&nbsp;your&nbsp;Recipe\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Find any Food\"\r\n                  value={writeFood}\r\n                  onChange={(e) => {\r\n                    setWriteFood(e.target.value);\r\n                    if (e.target.value.length > 2) {\r\n                      findAnyFood(e.target.value);\r\n                    }\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col xs={deviceSize < 800 ? 7 : 4}>\r\n                <Form.Label>Recipe</Form.Label>\r\n                <Form.Select\r\n                  onChange={(e) => {\r\n                    setSelectedFood(e.target.value);\r\n                    window.scrollTo(0, 500);\r\n                  }}\r\n                >\r\n                  <option value=\"\">Food select</option>\r\n\r\n                  {foodResults.map((food) => (\r\n                    <option value={food}>{food.split(\"*\")[0]}</option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Col>\r\n            </Row>\r\n\r\n            <br />\r\n            <Row>\r\n              <Col xs={deviceSize < 500 ? 12 : 10}>\r\n                {selectedFood !== \"\" && (\r\n                  <>\r\n                    <img\r\n                      className=\"imageFood\"\r\n                      src={selectedFood.split(\"*\")[2]}\r\n                    ></img>\r\n                  </>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n\r\n        {selectedFood !== \"\" && (\r\n          <div className=\"helpUsTitleContent\">\r\n            <p>\r\n              - Wine would you pair with{\" \"}\r\n              <strong>{selectedFood.split(\"*\")[0]}</strong> :{\" \"}\r\n            </p>\r\n\r\n            <div className=\"helpUsTitleContent\">\r\n              <Row>\r\n                <Col xs={deviceSize < 800 ? (deviceSize < 400 ? 12 : 6) : 2}>\r\n                  <Form.Label>Type</Form.Label>\r\n                  <Form.Select\r\n                    size=\"sm\"\r\n                    onChange={(e) => {\r\n                      setSpecificFood({\r\n                        Type: e.target.value,\r\n                        Color: specificFood.Color,\r\n                        Grape: specificFood.Grape,\r\n                        Year: specificFood.Year,\r\n                      });\r\n                    }}\r\n                  >\r\n                    <option\r\n                      value=\"\"\r\n                      selected={specificFood.Type === \"\" ? true : false}\r\n                    >\r\n                      Select Type\r\n                    </option>\r\n                    {typeWines.map((type) => (\r\n                      <option\r\n                        selected={specificFood.Type === type ? true : false}\r\n                      >\r\n                        {type}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Col>\r\n                <Col xs={deviceSize < 800 ? (deviceSize < 400 ? 12 : 6) : 2}>\r\n                  <Form.Label>Color</Form.Label>\r\n                  <Form.Select\r\n                    size=\"sm\"\r\n                    onChange={(e) => {\r\n                      setSpecificFood({\r\n                        Type: specificFood.Type,\r\n                        Color: e.target.value,\r\n                        Grape: specificFood.Grape,\r\n                        Year: specificFood.Year,\r\n                      });\r\n                    }}\r\n                  >\r\n                    <option\r\n                      value=\"\"\r\n                      selected={specificFood.Color === \"\" ? true : false}\r\n                    >\r\n                      Select color\r\n                    </option>\r\n                    {colorWines.map((color) => (\r\n                      <option\r\n                        selected={specificFood.Color === color ? true : false}\r\n                      >\r\n                        {color}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Col>\r\n                <Col xs={deviceSize < 800 ? (deviceSize < 400 ? 12 : 6) : 2}>\r\n                  <Form.Label>Grape</Form.Label>\r\n                  <Form.Select\r\n                    size=\"sm\"\r\n                    onChange={(e) => {\r\n                      setSpecificFood({\r\n                        Type: specificFood.Type,\r\n                        Color: specificFood.Color,\r\n                        Grape: e.target.value,\r\n                        Year: specificFood.Year,\r\n                      });\r\n                    }}\r\n                  >\r\n                    <option\r\n                      value=\"\"\r\n                      selected={specificFood.Grape === \"\" ? true : false}\r\n                    >\r\n                      Select grape\r\n                    </option>\r\n                    {grapeWines.map((grape) => (\r\n                      <option\r\n                        selected={specificFood.Grape === grape ? true : false}\r\n                      >\r\n                        {grape}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Col>\r\n                <Col xs={deviceSize < 800 ? (deviceSize < 400 ? 12 : 6) : 2}>\r\n                  <Form.Label>Year Range</Form.Label>\r\n                  <Form.Select\r\n                    size=\"sm\"\r\n                    onChange={(e) => {\r\n                      setSpecificFood({\r\n                        Type: specificFood.Type,\r\n                        Color: specificFood.Color,\r\n                        Grape: specificFood.Grape,\r\n                        Year: e.target.value,\r\n                      });\r\n                    }}\r\n                  >\r\n                    <option\r\n                      value=\"\"\r\n                      selected={specificFood.Year === \"\" ? true : false}\r\n                    >\r\n                      Select year\r\n                    </option>\r\n                    {wineYears.map((year) => (\r\n                      <option\r\n                        selected={specificFood.Year === year ? true : false}\r\n                      >\r\n                        {year}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <br />\r\n      <Row>\r\n        <Col xs={1}>\r\n          <Button variant=\"danger\" onClick={clearHandler}>\r\n            Clear\r\n          </Button>{\" \"}\r\n        </Col>\r\n        <Col xs={1}></Col>\r\n        <Col xs={1}>\r\n          <Button variant=\"success\" onClick={aplyHandler}>\r\n            Aply\r\n          </Button>\r\n        </Col>\r\n        {completeAdd && (\r\n          <Col xs={8} className=\"text-center\">\r\n            <Alert variant=\"success\">\r\n              {\" \"}\r\n              Thank you for your help. Your opinion added succesfully.\r\n            </Alert>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecificFood;\r\n"]},"metadata":{},"sourceType":"module"}