{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimitris.siamplis\\\\Desktop\\\\React-Node\\\\Front-End\\\\src\\\\pages\\\\HelpUs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport BigCategories from \"./HelpUsPages/BigCategories\";\nimport TypeDay from \"./HelpUsPages/TypeDay\";\nimport SpecificFood from \"./HelpUsPages/SpecificFood\";\nimport { Col, Row, Form } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport \"./HelpUs.css\";\nimport { FaPen, FaFish, FaPizzaSlice } from \"react-icons/fa\";\nimport { GiChickenOven } from \"react-icons/gi\";\nimport { ImSpoonKnife } from \"react-icons/im\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HelpUs = () => {\n  _s();\n\n  const [writeFood, setWriteFood] = useState(\"\");\n  const [foodResults, setFoodResults] = useState([]);\n  const [selectedFood, setSelectedFood] = useState(\"\"); // ------------ selected values -----------------\n  // const [colors, setColors] = useState([]);\n  // const [types, setTypes] = useState([]);\n  // const [grapes, setGrapes] = useState([]);\n  // ------------- drop Downs Values -----------------\n\n  const [colorWines, setColorWines] = useState([]);\n  const [typeWines, setTypeWines] = useState([]);\n  const [yearWines, setYearWines] = useState([]);\n  const [grapeWines, setGrapeWines] = useState([]);\n\n  const getWines = () => {\n    fetch(\"http://localhost:4000/getWines\").then(res => res.json()).then(json => {\n      var colors = [];\n      var types = [];\n      var years = [];\n      var prices = [];\n      var grapes = [];\n\n      for (const key in json.wines) {\n        colors.push(json.wines[key].wine.Color);\n        types.push(json.wines[key].wine.Type);\n        years.push(json.wines[key].wine.Year);\n        prices.push(json.wines[key].wine.Price);\n        grapes.push(json.wines[key].wine.Grapes);\n      }\n\n      colors = [...new Set(colors)];\n      types = [...new Set(types)];\n      years = [...new Set(years)];\n      grapes = [...new Set(grapes)];\n      setColorWines(colors);\n      setTypeWines(types);\n      setYearWines(years);\n      setGrapeWines(grapes);\n    });\n  };\n\n  useEffect(() => {\n    getWines();\n  }, []); // ---------------- Food API Call --------------------\n\n  const findAnyFood = food => {\n    fetch(`https://api.spoonacular.com/recipes/complexSearch?apiKey=27e614b6300f46b38613b4bb811633d0&query=${food}`).then(response => response.json()).then(actualData => {\n      console.log(actualData.results);\n      var foods = [];\n      actualData.results.map(food => {\n        foods.push(food.title + \"*\" + food.id + \"*\" + food.image);\n      });\n      setFoodResults(foods);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 9,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Your opinion matters \\xA0\", /*#__PURE__*/_jsxDEV(FaPen, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BigCategories, {\n      colorWines: colorWines,\n      typeWines: typeWines,\n      grapeWines: grapeWines\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypeDay, {\n      colorWines: colorWines,\n      typeWines: typeWines,\n      grapeWines: grapeWines\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HelpUs, \"0h8rI0w0WNq0lpKHHnBrnjhmYwc=\");\n\n_c = HelpUs;\nexport default HelpUs;\n\nvar _c;\n\n$RefreshReg$(_c, \"HelpUs\");","map":{"version":3,"sources":["C:/Users/dimitris.siamplis/Desktop/React-Node/Front-End/src/pages/HelpUs.js"],"names":["React","useEffect","BigCategories","TypeDay","SpecificFood","Col","Row","Form","useState","FaPen","FaFish","FaPizzaSlice","GiChickenOven","ImSpoonKnife","HelpUs","writeFood","setWriteFood","foodResults","setFoodResults","selectedFood","setSelectedFood","colorWines","setColorWines","typeWines","setTypeWines","yearWines","setYearWines","grapeWines","setGrapeWines","getWines","fetch","then","res","json","colors","types","years","prices","grapes","key","wines","push","wine","Color","Type","Year","Price","Grapes","Set","findAnyFood","food","response","actualData","console","log","results","foods","map","title","id","image"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport BigCategories from \"./HelpUsPages/BigCategories\";\r\nimport TypeDay from \"./HelpUsPages/TypeDay\";\r\nimport SpecificFood from \"./HelpUsPages/SpecificFood\";\r\nimport { Col, Row, Form } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport \"./HelpUs.css\";\r\nimport { FaPen, FaFish, FaPizzaSlice } from \"react-icons/fa\";\r\nimport { GiChickenOven } from \"react-icons/gi\";\r\n\r\n\r\n\r\nimport { ImSpoonKnife } from \"react-icons/im\";\r\n\r\nconst HelpUs = () => {\r\n  const [writeFood, setWriteFood] = useState(\"\");\r\n  const [foodResults, setFoodResults] = useState([]);\r\n  const [selectedFood, setSelectedFood] = useState(\"\");\r\n\r\n  // ------------ selected values -----------------\r\n  // const [colors, setColors] = useState([]);\r\n  // const [types, setTypes] = useState([]);\r\n  // const [grapes, setGrapes] = useState([]);\r\n\r\n  // ------------- drop Downs Values -----------------\r\n  const [colorWines, setColorWines] = useState([]);\r\n  const [typeWines, setTypeWines] = useState([]);\r\n  const [yearWines, setYearWines] = useState([]);\r\n  const [grapeWines, setGrapeWines] = useState([]);\r\n\r\n  const getWines = () => {\r\n    fetch(\"http://localhost:4000/getWines\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        var colors = [];\r\n        var types = [];\r\n        var years = [];\r\n        var prices = [];\r\n        var grapes = [];\r\n        for (const key in json.wines) {\r\n          colors.push(json.wines[key].wine.Color);\r\n          types.push(json.wines[key].wine.Type);\r\n          years.push(json.wines[key].wine.Year);\r\n          prices.push(json.wines[key].wine.Price);\r\n          grapes.push(json.wines[key].wine.Grapes);\r\n        }\r\n\r\n        colors = [...new Set(colors)];\r\n        types = [...new Set(types)];\r\n        years = [...new Set(years)];\r\n        grapes = [...new Set(grapes)];\r\n\r\n        setColorWines(colors);\r\n        setTypeWines(types);\r\n        setYearWines(years);\r\n        setGrapeWines(grapes);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWines();\r\n  }, []);\r\n\r\n  // ---------------- Food API Call --------------------\r\n  const findAnyFood = (food) => {\r\n    fetch(\r\n      `https://api.spoonacular.com/recipes/complexSearch?apiKey=27e614b6300f46b38613b4bb811633d0&query=${food}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((actualData) => {\r\n        console.log(actualData.results);\r\n        var foods = [];\r\n        actualData.results.map((food) => {\r\n          foods.push(food.title + \"*\" + food.id + \"*\" + food.image);\r\n        });\r\n        setFoodResults(foods);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <Row>\r\n          <Col xs={9}>\r\n            <h2>\r\n              Your opinion matters &nbsp;\r\n              <FaPen />\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n      </div>\r\n      <BigCategories\r\n        colorWines={colorWines}\r\n        typeWines={typeWines}\r\n        grapeWines={grapeWines}\r\n      />\r\n      <TypeDay\r\n        colorWines={colorWines}\r\n        typeWines={typeWines}\r\n        grapeWines={grapeWines}\r\n      />\r\n      <div>\r\n        {/* 3 .  */}\r\n       \r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HelpUs;\r\n"]},"metadata":{},"sourceType":"module"}