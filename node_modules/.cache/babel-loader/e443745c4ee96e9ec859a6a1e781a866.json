{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimitris.siamplis\\\\Desktop\\\\Seminar-Managment\\\\src\\\\pages\\\\Teams.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './Team.css';\nimport Spiner from '../Components/Spiner';\nimport '../Components/Spiner.css';\nimport { useState } from 'react';\nimport moment from \"moment\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSquare } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Teams = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  setTimeout(() => {\n    setIsLoading(false);\n  }, 500);\n  const vacation = [{\n    start: \"2021-12-15\",\n    finish: \"2021-12-17\"\n  }, {\n    start: \"2021-12-30\",\n    finish: \"2022-1-2\"\n  }];\n  const standBy = [{\n    start: \"2022-01-7\",\n    finish: \"2022-01-10\"\n  }, {\n    start: \"2022-02-1\",\n    finish: \"2022-02-10\"\n  }];\n  const trackedDays1 = [\"2021-12-25\", \"2021-12-27\"]; // ----------------RANGE ARRAYS THAT YOU WANT TO APPEAR---------------------\n\n  const test = [];\n  const StandBy = []; // ----------------------- RANGE MAKER FUNCTION -----------------------------\n\n  const rangeMaker = (startDate, finishDate) => {\n    let array = [];\n    var currentDate = moment(startDate);\n    var stopDate = moment(finishDate);\n\n    while (currentDate <= stopDate) {\n      array.push(moment(currentDate).format('YYYY-MM-DD'));\n      currentDate = moment(currentDate).add(1, 'days');\n    }\n\n    return array;\n  };\n\n  var Vacations = [];\n\n  for (let i = 0; i < vacation.length; i++) {\n    Vacations = Vacations.concat(rangeMaker(vacation[i].start, vacation[i].finish));\n  }\n\n  console.log(Vacations);\n  var Vacations = [];\n\n  for (let i = 0; i < vacation.length; i++) {\n    Vacations = Vacations.concat(rangeMaker(vacation[i].start, vacation[i].finish));\n  }\n\n  console.log(Vacations); // ----------------------- CONVERT DATE TO D-M-Y -----------------------\n\n  function convertDate(inputFormat) {\n    function pad(s) {\n      return s < 10 ? '0' + s : s;\n    }\n\n    var d = new Date(inputFormat);\n    return [d.getFullYear(), pad(d.getMonth() + 1), pad(d.getDate())].join('-');\n  } // ------------------------ On CLICK DAY -------------------------\n\n\n  const doSomething = (value, event) => {\n    if (test.includes(convertDate(value))) {\n      console.log(\"There is Something Here!\");\n    }\n\n    alert(convertDate(value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxes\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"boxV\",\n        size: \"lg\",\n        icon: faSquare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), \" \\xA0 Vacation \\xA0\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"boxC\",\n        size: \"lg\",\n        icon: faSquare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), \" \\xA0 Current Day \\xA0\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"boxS\",\n        size: \"lg\",\n        icon: faSquare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), \" \\xA0 Stand By \\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(Calendar, {\n      className: \"calendar\",\n      onClickDay: (value, event) => doSomething(value, event),\n      tileClassName: _ref => {\n        let {\n          date,\n          view\n        } = _ref;\n\n        if (view === \"month\" && Vacations.includes(moment(date).format(\"YYYY-MM-DD\"))) {\n          return \"vocation\";\n        }\n\n        if (StandBy.includes(moment(date).format(\"YYYY-MM-DD\"))) {\n          return \"activeDay\";\n        } else {\n          return null;\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Spiner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Teams, \"5S7VQ8+9ArWv2AFPIfnY+LwrHeg=\");\n\n_c = Teams;\nexport default Teams;\n\nvar _c;\n\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"sources":["C:/Users/dimitris.siamplis/Desktop/Seminar-Managment/src/pages/Teams.js"],"names":["React","Calendar","Spiner","useState","moment","FontAwesomeIcon","faSquare","Teams","isLoading","setIsLoading","setTimeout","vacation","start","finish","standBy","trackedDays1","test","StandBy","rangeMaker","startDate","finishDate","array","currentDate","stopDate","push","format","add","Vacations","i","length","concat","console","log","convertDate","inputFormat","pad","s","d","Date","getFullYear","getMonth","getDate","join","doSomething","value","event","includes","alert","date","view"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './Team.css'\r\nimport Spiner from '../Components/Spiner';\r\nimport '../Components/Spiner.css'\r\nimport { useState } from 'react';\r\nimport moment from \"moment\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSquare} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst Teams = () => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    setTimeout( () => { setIsLoading(false) }, 500)\r\n    \r\n      const vacation = [ { start:\"2021-12-15\" , finish: \"2021-12-17\" } , { start:\"2021-12-30\" , finish: \"2022-1-2\" } ]\r\n      const standBy =  [ { start:\"2022-01-7\" , finish: \"2022-01-10\" } , { start:\"2022-02-1\" , finish: \"2022-02-10\" } ] \r\n      \r\n      \r\n      const trackedDays1 = [\"2021-12-25\", \"2021-12-27\"];\r\n      \r\n\r\n      // ----------------RANGE ARRAYS THAT YOU WANT TO APPEAR---------------------\r\n      const test = [];\r\n     \r\n      const StandBy = [];\r\n      \r\n\r\n      // ----------------------- RANGE MAKER FUNCTION -----------------------------\r\n    \r\n    \r\n    const rangeMaker = (startDate , finishDate) => {\r\n\r\n        let array = []\r\n        var currentDate = moment(startDate);\r\n        var stopDate = moment(finishDate);\r\n        while (currentDate <= stopDate) {\r\n            array.push( moment(currentDate).format('YYYY-MM-DD') )\r\n            currentDate = moment(currentDate).add(1, 'days');\r\n        }\r\n        return(array)    \r\n\r\n    }\r\n\r\n    \r\n    \r\n    var Vacations = [];\r\n    for (let i = 0; i < vacation.length; i++) {\r\n        \r\n        Vacations = Vacations.concat(rangeMaker( vacation[i].start , vacation[i].finish))\r\n        \r\n    }\r\n    console.log(Vacations)\r\n\r\n    var Vacations = [];\r\n    for (let i = 0; i < vacation.length; i++) {\r\n        \r\n        Vacations = Vacations.concat(rangeMaker( vacation[i].start , vacation[i].finish))\r\n        \r\n    }\r\n    console.log(Vacations)\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // ----------------------- CONVERT DATE TO D-M-Y -----------------------\r\n    function convertDate(inputFormat) {\r\n        function pad(s) { return (s < 10) ? '0' + s : s; }\r\n        var d = new Date(inputFormat)\r\n        return [d.getFullYear(),pad(d.getMonth()+1) , pad(d.getDate()),  ].join('-')\r\n      }\r\n\r\n\r\n\r\n    // ------------------------ On CLICK DAY -------------------------\r\n\r\n    const doSomething = (value,event) =>{\r\n        if(test.includes(convertDate(value)))\r\n        {\r\n            console.log(\"There is Something Here!\")\r\n        }\r\n        alert(convertDate(value) )\r\n    }\r\n    \r\n   \r\n\r\n    return (\r\n        <div>\r\n            <div className='boxes'>\r\n            <FontAwesomeIcon className = 'boxV'   size= 'lg'   icon={faSquare}/> &nbsp; Vacation &nbsp; \r\n            <FontAwesomeIcon className = 'boxC'   size= 'lg'   icon={faSquare}/> &nbsp; Current Day &nbsp; \r\n            <FontAwesomeIcon className = 'boxS'   size= 'lg'   icon={faSquare}/> &nbsp; Stand By &nbsp; \r\n            </div>\r\n            {!isLoading &&  <Calendar  className='calendar' onClickDay = {(value, event ) => doSomething(value,event) } tileClassName={ ({ date, view }) =>\r\n            {\r\n\r\n            \r\n                \r\n                if(view === \"month\" && Vacations.includes( moment(date).format(\"YYYY-MM-DD\"))    )\r\n                {\r\n                    return(\"vocation\");\r\n                }\r\n                if(StandBy.includes( moment(date).format(\"YYYY-MM-DD\")))\r\n                {\r\n                    return(\"activeDay\");\r\n                }\r\n                else{\r\n                    return(null)\r\n                }\r\n                \r\n            } \r\n\r\n            } \r\n                />}\r\n            \r\n            {isLoading && <Spiner/>}\r\n\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Teams\r\n "]},"metadata":{},"sourceType":"module"}